
#ifdef __MYDLL__
#define SIMPLE_EXAMPLE extern "C" __declspec(dllexport)
#else
#define SIMPLE_EXAMPLE extern "C" __declspec(dllimport)
#endif

SIMPLE_EXAMPLE void MessageInfo(char* str);
SIMPLE_EXAMPLE void Ref(int& ref);
SIMPLE_EXAMPLE int counter;

/*
DLL - динамически подключаема€ библиотека. 
Ѕывают двух видов: 
1) хранит функции, переменные, структуры, классы и т.д.
2) хранит ресурсы.
User32.dll Ц функции пользовательского интерфейса и функции передачи сообщений.
Kernell.dll Ц функции дл€ управлени€ пам€тью, потоками и процессами.
Gdi32.dll Ц функции дл€ вывода графики и текста.
Cards.dll Ц хранит ресурсы (карты).

—оздание dll предоставл€ет следующие возможности: 
1)	—крытие реализации функции и классов;
2)	”добство переноса программного кода между проектами;
3)	¬озможность использовани€ нескольких €зыков программировани€;
4)	Ёкономи€ пам€ти Ц dll один раз загружаетс€ в оперативную пам€ть и затем может использоватьс€ многими приложени€ми;
5)	–асширение функциональности приложени€;
6)	–азделение ресурсов.

—пособы св€зывани€ dll:
1)	Ќе€вное св€зывание;
2)	явное св€зывание;
3)  ќтложенна€ загрузка.

__declspec (decline specification) Ц набор специальных директив компил€тору дл€ специальных компил€ционных условий.
dllexport Ц говорит о том, что функци€ экспортируема€
dllimport Ц говорит о том, что функци€ импортируема€
extern "C" Ц говорит компил€тору о том, что не нужно производить декодирование имени, т.е. искажать им€.

*/