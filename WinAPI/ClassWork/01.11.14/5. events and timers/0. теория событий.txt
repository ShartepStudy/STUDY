Событие (event) — это объект ядра, предназначенный для синхронизации работы потоков. Чаще всего событие используется для уведомления об окончании какой-либо операции. 

События бывают двух типов:
•	со сбросом вручную (manual-reset events);
•	с автоматическим сбросом (auto-reset events). 

События с ручным сбросом позволяют возобновить выполнение сразу нескольких ждущих потоков,
в то время как события с автоматическим сбросом возобновляют выполнение только одного потока. 

Объект ядра «событие» создается функцией API CreateEvent.

HANDLE CreateEvent( 
	LPSECURITY_ATTRIBUTES eventAttributes, // атрибуты доступа 
	BOOL bManualReset, // тип сброса 
	BOOL bInitialState, // начальное состояние 
	LPCTSTR pszName // имя объекта 
);

Параметр bManualReset определяет тип объекта-события. Значение TRUE  создает событие со сбросом вручную, а значение FALSE — событие с автоматическим сбросом. Параметр blnitialState определяет начальное состояние события — свободное (TRUE) или занятое (FALSE). Параметр pszName содержит указатель на строку, в которой содержится имя объекта. Если pszName имеет значение NULL, то создается неименованный объект.

Синхронизация работы потоков с использованием событий состоит в следующем. Предположим, что некоторый поток, создавший объект ядра «событие», переводит его в занятое состояние и приступает к своим операциям. Закончив работу, поток сбрасывает событие в свободное состояние. В этот момент другой поток, который ждал перехода события в свободное состояние, пробуждается и становится планируемым.

События могут использоваться для синхронизации потоков разных процессов. 
Получить дескриптор существующего объекта-события можно вызовом функции  CreateEvent, либо вызовом функции OpenEvent,
указав в параметре pszName имя существующего объекта.

HANDLE OpenEvent( 
   DWORD dwDesiredAccess, // права доступа (EVENT_ALL_ACCESS – полный доступ)
   BOOL blnheritHandle, // параметр определяет, будет ли  наследоваться
   // дескриптор события (если TRUE – дескриптор наследуемый)
   LPCTSTR pszName // имя объекта 
);

Создав событие, существует возможность напрямую управлять его состоянием.  Для перевода события в свободное состояние используется функция API  SetEvent.

BOOL SetEvent(
	HANDLE hEvent // дескриптор объекта ядра «событие»
);

Для перевода события в занятое состояние используется функция API  ResetEvent.

BOOL ResetEvent(
	HANDLE hEvent // дескриптор объекта ядра «событие»
);

Для событий с автоматическим сбросом действует следующее правило. Когда ожидание потоком освобождения события успешно завершается, то объект-событие  автоматически сбрасывается в занятое состояние. Для событий со сбросом вручную автоматического сбрасывания не происходит, поэтому для возврата в занятое состояние необходимо вызвать функцию ResetEvent. 

BOOL PulseEvent(
	HANDLE hEvent // дескриптор объекта ядра «событие»
);

Функция PulseEvent освобождает событие и тут же переводит его обратно в занятое состояние. Вызов данной функции равнозначен последовательному вызову функций SetEvent и ResetEvent. При вызове функции PulseEvent для события со сбросом вручную, любые потоки, ждущие этот объект, становятся планируемыми. При вызове этой функции применительно к событию с автоматическим сбросом пробуждается только один из ждущих потоков.


