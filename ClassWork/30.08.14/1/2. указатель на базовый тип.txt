#include <iostream>
using namespace std;

class Transport{
protected:
	double speed;
public:
	void Drive(){
		cout<<"Some transport...\n";
	}
};

class Car: public Transport{
public:
	void Drive(){
		cout<<"Car!\n";
	}
};

class Bike: public Transport{
public:
	void Drive(){
		cout<<"Bike!\n";
	}
};

class Telega: public Transport{
public:
	void Drive(){
		cout<<"Telega!\n";
	}
};

void main(){

	Bike b;

	Transport *t = &b;

}

// предположим, необходимо смоделировать поведение различных видов транспорта на перекрёсте.
// всё просто: на светофоре загорелся зелёный - и все поехали.
// однако, транспортные средства разные, и едут они по-разному.
// к тому же, заранее неизвестно, сколько всего машин будет у светофора,
// т.е. их общее количество определяется динамически, на этапе выполнения программы.

// обычно для работы с группой объектов используются массивы
// (ну или на крайняк бинарное дерево :))

// эй, но ведь объекты у нас разных типов! а в массиве все элементы однотипные!

// для решения этой проблемы придумали одну хитрую вещь:
// разрешается делать указатель на объект базового класса,
// и в дальнейшем присваивать ему указатели на объект производного класса.